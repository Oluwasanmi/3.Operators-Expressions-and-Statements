using System;

class BitExchangeAdvanced
{
    static void Main()
    {
        Console.WriteLine("Enter n,p,q,k:");
        long n = long.Parse(Console.ReadLine());
        int P = int.Parse(Console.ReadLine());
        int Q = int.Parse(Console.ReadLine());
        int K = int.Parse(Console.ReadLine());
        if (Math.Max(P, Q) + K > 32)
        {
            Console.WriteLine("Out of range");
            return;
        }
        else if (Math.Min(P, Q) + K > Math.Max(P, Q))
        {
            Console.WriteLine("Overlapping");
            return;
        }
        else
        {
            for (int L=P, M = Q; L <=P+K-1|| M <= Q+K-1; L++, M++)
            {
                long mask;
                long bitL = (n >>L) & 1;
                long bitM = (n >> M) & 1;

                if (bitM == 0) //put bitP=0;
                {
                    mask = ~(1 <<L);
                    n = n & mask;
                }
                else if (bitM == 1)//put bitP=1;
                {
                    mask = 1 <<L;
                    n = n |mask;
                }
                if (bitL == 0)//put bitQ=0;
                {
                    mask = ~(1 << M);
                    n = n & mask;
                }
                else if (bitL == 1)//put bitQ=1;
                {
                    mask = 1 << M;
                    n = n | mask;
                }
            }
       }
      Console.WriteLine(n);
    }
}

